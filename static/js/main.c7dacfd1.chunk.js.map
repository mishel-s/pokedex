{"version":3,"sources":["components/common/pokemonCard/styles.css","components/common/filters/itemsPerPage/styles.css","containers/content/styles.css","components/common/filters/searchName/styles.css","components/common/header/img/logo.png","containers/filtersPanel/styles.css","containers/tagsPanel/styles.css","components/common/spinners/styles.css","App.css","components/common/header/logo.js","components/common/filters/itemsPerPage/index.js","constants/types.js","components/common/filters/searchName/index.js","constants/actions/actionsTypes.js","containers/filtersPanel/index.js","containers/tagsPanel/smart/getPokemonsTypes.js","containers/content/smart/filterPokemons.js","containers/tagsPanel/smart/createTypesList.js","containers/tagsPanel/index.js","containers/content/smart/getPokemons.js","components/common/pokemonCard/index.js","containers/content/smart/createContent.js","components/common/spinners/spinnerThin.js","containers/content/index.js","App.js","serviceWorker.js","reducers/index.js","reducers/itemsPerPage.js","reducers/pokemonsTypes.js","reducers/pokemonsInfo.js","reducers/checkedTypes.js","reducers/filterPokemonsStore.js","reducers/findPokemons.js","index.js","store/index.js"],"names":["module","exports","pokemonCard","pokemonDescription","pokemonBigInfo","pokemonBg","pokemonMain","pokemonClose","pokemonClose_X","pokemonInfo_logo","pokemonInfo","pokemonInfo_details","pokemonInfo_details__name","itemsPerPage","bt","active","content","pokemonsCards","nopokemons","searchName","__webpack_require__","p","filtersPanel","tagsPanel","spinnerThin","App","App-logo","App-logo-spin","App-header","App-link","Logo","react_default","a","createElement","Fragment","src","logo","alt","Component","ItemsPerPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getStyles","name","state","styles","value","_this2","setItems","className","id","onClick","e","setState","target","connect","dispatch","type","payload","onChange","findPokemons","toLowerCase","placeholder","pokemonsTypes","pokemonsInfo","checkedTypes","filterPokemons","filters_searchName","filters_itemsPerPage","getPokemonsTypes","fetch","then","response","json","catch","error","console","log","checkPokemons","pokemons","filter","pokemon","arrShowPokemon","_loop","i","arr","forEach","pokemonType","push","includes","length","checkpokemonTypes","types","CreateTypesList","addTypeToList","map","key","toString","document","getElementById","style","backgroundColor","val","toggleChecked","filterContentPokemons","data","results","createTypesList","removeTypeFromList","getArrayPokemonsTypes","arrPromisesPokemons","getPokemons","getArrPromises","Promise","all","GetPokemonsInfo","getPokemonTypes","arrTypes","ShowPokemonTypes","join","showPokemonBigInfo","display","right","closePokemonBigInfo","PokemonCard","_props$pokemon","weight","height","photo","sprites","front_default","link","pokemonDescription_name","toUpperCase","pokemonDescription_type","pokemonInfo_details__types","pokemonInfo_details__weight","pokemonInfo_details__height","pokemonInfo_details__link","href","CreateContent","listPokemons","undefined","SpinnerThin","lib_default","size","borderSize","duration","Content","getPokemonsInfo","getArrayPokemonsInfo","createContent","spinnerThin_SpinnerThin","header_logo","containers_filtersPanel","containers_tagsPanel","Boolean","window","location","hostname","match","combineReducers","arguments","action","ReactDOM","render","es","store","createStore","rootReducers","composeWithDevTools","applyMiddleware","thunk","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c7dacfd1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokemonCard\":\"_2AkdGGssd9H03qFmFyQh8\",\"pokemonDescription\":\"_1fJL4PIBtLimlbIvnl101G\",\"pokemonBigInfo\":\"DcDO_LAxRqG7GDq7RR5Ex\",\"pokemonBg\":\"_1Vy-fwwc2ENda_b093I7-a\",\"pokemonMain\":\"_1zHA4p357EAQ3Hq8io7DtJ\",\"pokemonClose\":\"_1XPysRZ9e5zoknRk2GYb0v\",\"pokemonClose_X\":\"_3ROBbdgksSGNKzA15gm-a_\",\"pokemonInfo_logo\":\"_2t3czCHHGAHqKYhGGIT8II\",\"pokemonInfo\":\"ZjS5cfqtRGZ4nGp9WCSMb\",\"pokemonInfo_details\":\"_2lByAqoMob-rtu0LcanfAD\",\"pokemonInfo_details__name\":\"_7nRl7V2gHmaauF-oAtz3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemsPerPage\":\"_3bn_E4_Cghi_RnF5_Z-Uox\",\"bt\":\"_1lfL6QoSxVQs6iYHYOzrrU\",\"active\":\"_2I588p8DerdMdc_QMdN0_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"mNspQC-UH7B1ovcvsGCMH\",\"pokemonsCards\":\"_1g34eRnyKOdx2B1mma8e65\",\"nopokemons\":\"_21CUgSvBFtCVb32ab83f_n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchName\":\"_2SulnnTWscYkOwWgC9qGKP\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5fc17fd4.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filtersPanel\":\"_2MViAHM1wHmrwc87asgv94\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tagsPanel\":\"_3JXS8WRpD631pkVHm6s31j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerThin\":\"_3EFKhj6o9p3lgyh2eJX7Lq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"_3Ge-CIdMbROGJFA06DTnds\",\"App-logo\":\"S1LueT9M4QSOTquar826M\",\"App-logo-spin\":\"_2zbnzgnYyXt1P54dmldOdh\",\"App-header\":\"_1mzDF1MhAg2ItVJGFPVYW0\",\"App-link\":\"_2IVtctMzgDks-Pbg2govDv\"};","import React, { Component } from 'react';\r\nimport logo from './img/logo.png';\r\nimport styles from './styles.css';\r\n\r\nclass Logo extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <header>\r\n                    <img src={logo} alt=\"logo\" />\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logo;","import React, { Component } from 'react';\r\nimport styles from './styles.css';\r\nimport {connect} from 'react-redux';\r\nimport {SET_ITEMS_PER_PAGE} from '../../../../constants/types.js';\r\n\r\nclass ItemsPerPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: 'bt_10',\r\n            value: '10'\r\n        }\r\n    }\r\n    getStyles = (name) => {\r\n        const {active} = this.state;\r\n        return active === name ? styles.active : '';\r\n    }\r\n    render() {\r\n        this.props.setItems(this.state.value);\r\n        return (\r\n            <React.Fragment>\r\n                <div className={styles.itemsPerPage}>\r\n                    <span>Items per page:</span>\r\n                    <button id='bt_10' value='10' onClick={(e) => {this.setState( { active: e.target.id, value: e.target.value } ); this.props.setItems(this.state.value);}} className={styles.bt + ' ' + this.getStyles('bt_10')}>10</button>\r\n                    <button id='bt_20' value='20' onClick={(e) => {this.setState( { active: e.target.id, value: e.target.value } ); this.props.setItems(this.state.value);}} className={styles.bt + ' ' + this.getStyles('bt_20')}>20</button>\r\n                    <button id='bt_50' value='50' onClick={(e) => {this.setState( { active: e.target.id, value: e.target.value } ); this.props.setItems(this.state.value);}} className={styles.bt + ' ' + this.getStyles('bt_50')}>50</button>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        itemsPerPage: state.itemsPerPage\r\n    }),\r\n    dispatch => ({\r\n        setItems(value) {\r\n            dispatch({type: SET_ITEMS_PER_PAGE, payload: value})\r\n        }\r\n    })\r\n)(ItemsPerPage)","export const SET_ITEMS_PER_PAGE = 'SET_ITEMS_PER_PAGE';\r\nexport const POKEMONS_INFO = 'POKEMONS_INFO';","import React, { Component } from 'react';\r\nimport styles from './styles.css';\r\nimport {connect} from 'react-redux';\r\nimport {FIND_POKEMONS} from '../../../../constants/actions/actionsTypes.js';\r\n\r\nclass searchName extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: 'bt_10',\r\n        }\r\n    }\r\n    getStyles = (name) => {\r\n        const {active} = this.state;\r\n        return active === name ? styles.active : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={styles.searchName}>\r\n                    <span>Search by Name:</span>\r\n                    <input id=\"searchName\" type=\"text\"  onChange={ (e) => {this.props.findPokemons(e.target.value.toLowerCase())}} placeholder=\"Type name\" />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        itemsPerPage: state.itemsPerPage,\r\n        pokemonsTypes: state.pokemonsTypes,\r\n        pokemonsInfo: state.pokemonsInfo,\r\n        checkedTypes: state.checkedTypes,\r\n        filterPokemons: state.filterPokemons\r\n    }),\r\n    dispatch => ({\r\n        findPokemons: (value) => {\r\n            dispatch({type: FIND_POKEMONS, payload: value})\r\n        },\r\n    }),\r\n\r\n)(searchName);\r\n","export const GET_ARRAY_POKEMONS_TYPES = 'GET_ARRAY_POKEMONS_TYPES';\r\nexport const ADD_TYPE_TO_LIST = 'ADD_TYPE_TO_LIST';\r\nexport const REMOVE_TYPE_FROM_LIST = 'REMOVE_TYPE_FROM_LIST';\r\nexport const FILTER_POKEMONS = 'FILTER_POKEMONS';\r\nexport const FIND_POKEMONS = 'FIND_POKEMONS';\r\n","import React, { Component } from 'react';\r\nimport styles from  './styles.css';\r\nimport ItemsPerPage from '../../components/common/filters/itemsPerPage';\r\nimport SearchName from \"../../components/common/filters/searchName\";\r\n\r\nclass filtersPanel extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={styles.filtersPanel}>\r\n                    <SearchName />\r\n                    <ItemsPerPage />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default filtersPanel;","let GetPokemonsTypes = () => {\r\n    return fetch(\"https://pokeapi.co/api/v2/type/\")\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"ERROR:\" + error);\r\n            });\r\n};\r\n\r\nexport default function () {\r\n    return GetPokemonsTypes();\r\n}","let checkpokemonTypes = (pokemonsTypes, checkedTypes) => {\r\n  let arrShowPokemon = [];\r\n  for(let i=0; i < checkedTypes.length; i++) {\r\n    let arr = [];\r\n    pokemonsTypes.forEach(pokemonType => {\r\n        if(pokemonType.type.name == checkedTypes[i]) {\r\n            arr.push('show');\r\n        } else arr.push('hide');\r\n    });\r\n    if(arr.includes('show')) {\r\n      arrShowPokemon.push('show');\r\n    } else arrShowPokemon.push('hide');\r\n  }\r\n  if(arrShowPokemon.includes('hide')) {\r\n    return 'hide';\r\n  } else return 'show';\r\n}\r\n\r\nlet checkPokemons = (pokemons, checkedTypes) => {\r\n    const showPokemons = pokemons.filter(pokemon=>\r\n      checkpokemonTypes(pokemon.types, checkedTypes) == 'show'\r\n    );\r\n    return showPokemons;\r\n}\r\n\r\nexport default checkPokemons;\r\n","import React from 'react';\r\nimport checkPokemons from \"../../content/smart/filterPokemons.js\";\r\n\r\nlet checkedTypes = [];\r\nlet toggleChecked = (e) => {\r\n    let pokemon = document.getElementById(e.target.id);\r\n    if(e.target.className == 'hide' || e.target.className == '') {\r\n        pokemon.className = 'show';\r\n        pokemon.style.backgroundColor = '#2F8FD8';\r\n        checkedTypes.push(e.target.id);\r\n    } else {\r\n        pokemon.className = 'hide';\r\n        pokemon.style.backgroundColor = 'transparent';\r\n        checkedTypes = checkedTypes.filter(val => {\r\n                    return val !== e.target.id\r\n                });\r\n    }\r\n}\r\n\r\nlet CreateTypesList = (props) => {\r\n    const types = props.types;\r\n    const addTypeToList = props.addTypeToList;\r\n    return (\r\n        <ul>\r\n            {\r\n                types.map((type) => (\r\n                    <li\r\n                        key={type.toString()}\r\n                        id={type}\r\n                        onClick={(e)=>{\r\n                            toggleChecked(e);\r\n                            props.filterContentPokemons(checkPokemons(props.pokemonsInfo, checkedTypes));\r\n                            addTypeToList(checkedTypes);\r\n                        }}\r\n                    >\r\n                        {type}\r\n                        </li>\r\n                ))\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default CreateTypesList;\r\n","import React, { Component } from 'react';\r\nimport styles from  './styles.css';\r\nimport {connect} from 'react-redux';\r\nimport {GET_ARRAY_POKEMONS_TYPES} from \"../../constants/actions/actionsTypes\";\r\nimport getPokemonsTypes from './smart/getPokemonsTypes.js';\r\nimport CreateTypesList from './smart/createTypesList.js';\r\nimport {FILTER_POKEMONS} from \"../../constants/actions/actionsTypes\";\r\nimport {ADD_TYPE_TO_LIST} from \"../../constants/actions/actionsTypes\";\r\nimport {REMOVE_TYPE_FROM_LIST} from \"../../constants/actions/actionsTypes\";\r\n\r\nclass tagsPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            types: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n      let pokemonsTypes = [];\r\n      getPokemonsTypes()\r\n          .then(data => {\r\n              for(let i=0; i < data.results.length; i++) {\r\n                  pokemonsTypes.push(data.results[i].name)\r\n              }\r\n              this.setState({\r\n                  types: pokemonsTypes,\r\n              });\r\n          })\r\n    }\r\n\r\n    render() {\r\n      return (\r\n          <React.Fragment>\r\n            <div className={styles.tagsPanel}>\r\n                Find by Type:\r\n                <CreateTypesList\r\n                    pokemonsInfo = {this.props.pokemonsInfo}\r\n                    types = {this.state.types}\r\n                    filterContentPokemons = {this.props.filterContentPokemons}\r\n                    addTypeToList = {this.props.addTypeToList}\r\n                    removeTypeFromList = {this.props.removeTypeFromList}\r\n                />\r\n            </div>\r\n            {this.props.getArrayPokemonsTypes(this.state.types)}\r\n          </React.Fragment>\r\n      )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        pokemonsInfo: state.pokemonsInfo.filter(pokemon=> pokemon.name.includes(state.findPokemons)),\r\n        pokemonsTypes: state.pokemonsTypes,\r\n        checkedTypes: state.checkedTypes,\r\n        filterPokemons: state.filterPokemons\r\n    }),\r\n    dispatch => ({\r\n        getArrayPokemonsTypes(value) {\r\n            dispatch({type: GET_ARRAY_POKEMONS_TYPES, payload: value})\r\n        },\r\n        filterContentPokemons(value) {\r\n            dispatch({type: FILTER_POKEMONS, payload: value})\r\n        },\r\n        addTypeToList(value) {\r\n            dispatch({type: ADD_TYPE_TO_LIST, payload: value})\r\n        },\r\n        removeTypeFromList(value) {\r\n            dispatch({type: REMOVE_TYPE_FROM_LIST, payload: value})\r\n        },\r\n    })\r\n)(tagsPanel);\r\n","let arrPromisesPokemons = [];\r\n\r\nlet getArrPromises = () => {\r\n    for (let i = 1; i <= 50; i++) {\r\n        arrPromisesPokemons.push(\r\n            fetch(\"https://pokeapi.co/api/v2/pokemon/\" + i + '/')\r\n                .then(response=> {\r\n                    return response.json();\r\n                })\r\n        );\r\n    };\r\n}\r\n\r\nlet GetPokemonsInfo = () => {\r\n    let pokemonsInfo = [];\r\n    return Promise.all(arrPromisesPokemons)\r\n            .then((pokemons)=> {\r\n                pokemons.forEach((pokemon)=> {\r\n                    pokemonsInfo.push(pokemon)\r\n                })\r\n                return pokemonsInfo;\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"ERROR:\" + error);\r\n            });\r\n};\r\n\r\nexport default function () {\r\n    getArrPromises();\r\n    return GetPokemonsInfo();\r\n}\r\n","import React from 'react';\r\nimport styles from  './styles.css';\r\n\r\nlet getPokemonTypes = (types) => {\r\n    let arrTypes = [];\r\n    for (let i=0; i < types.length; i++) {\r\n        arrTypes.push(types[i].type.name);\r\n    }\r\n    return arrTypes;\r\n}\r\n\r\nlet ShowPokemonTypes = (props) => {\r\n    let types = props.types;\r\n    return types.join(', ');\r\n}\r\n\r\nlet showPokemonBigInfo = (props) => {\r\n    let pokemonBigInfo = document.getElementById(props.id);\r\n    let pokemonBg = document.getElementById(props.id + '_Bg');\r\n    pokemonBigInfo.style.display = 'flex';\r\n    pokemonBg.style.right = '0';\r\n}\r\n\r\nlet closePokemonBigInfo = (props) => {\r\n    let pokemonBigInfo = document.getElementById(props.id);\r\n    let pokemonBg = document.getElementById(props.id + '_Bg');\r\n    pokemonBigInfo.style.display = 'none';\r\n    pokemonBg.style.right = '100%';\r\n}\r\n\r\nexport default function PokemonCard(props) {\r\n    const {name, id, weight, height} = props.pokemon;\r\n    const types = getPokemonTypes(props.pokemon.types);\r\n    const photo = props.pokemon.sprites.front_default;\r\n    const link = \"https://pokeapi.co/api/v2/pokemon/\" + props.pokemon.id + \"/\";\r\n    return (\r\n        <React.Fragment>\r\n            <div onClick={()=> {showPokemonBigInfo(props.pokemon)}} className={styles.pokemonCard}>\r\n                <img src={photo} alt=\"pokemonLogo\" />\r\n                <div className={styles.pokemonDescription}>\r\n                    <div className={styles.pokemonDescription_name}>\r\n                        {name.toUpperCase()}\r\n                    </div>\r\n                    <div className={styles.pokemonDescription_type}>\r\n                        Type: <ShowPokemonTypes types={types}/>.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id = {id} className={styles.pokemonBigInfo}>\r\n                <div id = {id + '_Bg'} className={styles.pokemonBg}></div>\r\n                <div id = {id + '_Main'} className={styles.pokemonMain}>\r\n                    <div className={styles.pokemonClose}>\r\n                        <div className={styles.pokemonClose_X} onClick={()=> {closePokemonBigInfo(props.pokemon)}}>X</div>\r\n                    </div>\r\n                    <div className={styles.pokemonInfo}>\r\n                        <div className={styles.pokemonInfo_logo}>\r\n                            <img src={photo} alt=\"pokemonLogo\" />\r\n                        </div>\r\n                        <div className={styles.pokemonInfo_details}>\r\n                            <p className={styles.pokemonInfo_details__name}><b>{name.toUpperCase()}</b></p>\r\n                            <p className={styles.pokemonInfo_details__types}><b>Type:</b> <ShowPokemonTypes types={types}/></p>\r\n                            <p className={styles.pokemonInfo_details__weight}><b>Weight:</b> {weight}</p>\r\n                            <p className={styles.pokemonInfo_details__height}><b>Height:</b> {height}</p>\r\n                            <p className={styles.pokemonInfo_details__link}><b>Link:</b> <a href={link}>{link}</a></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PokemonCard from \"../../../components/common/pokemonCard\";\r\n\r\nlet CreateContent = (props) => {\r\n    const itemsPerPage = props.itemsPerPage;\r\n    const pokemons = props.pokemons;\r\n    let listPokemons = [];\r\n    if(pokemons.length) {\r\n      for(let i=0; i < itemsPerPage; i++) {\r\n        if(pokemons[i] !== undefined) {\r\n          listPokemons.push(<PokemonCard key={pokemons[i].name.toString()} pokemon={pokemons[i]} />)\r\n        }\r\n      }\r\n      return (\r\n          <React.Fragment>{listPokemons}</React.Fragment>\r\n      );\r\n    } else return (<React.Fragment>NO INFORMATION</React.Fragment>)\r\n}\r\n\r\nexport default CreateContent;\r\n","import React, { Component } from \"react\";\r\nimport MDSpinner from \"react-md-spinner\";\r\nimport styles from \"./styles.css\";\r\n\r\nexport default class SpinnerThin extends Component {\r\n    render() {\r\n        return (\r\n            <div className={styles.spinnerThin}>\r\n                <MDSpinner size={70} borderSize={3} duration={2000} />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport styles from  './styles.css';\r\nimport getPokemonsInfo from './smart/getPokemons.js';\r\nimport {POKEMONS_INFO} from \"../../constants/types\";\r\nimport CreateContent from './smart/createContent.js';\r\nimport SpinnerThin from \"../../components/common/spinners/spinnerThin\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Content extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pokemonsInfo: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        getPokemonsInfo()\r\n            .then(data=> {\r\n                this.setState({\r\n                    pokemonsInfo: data,\r\n                });\r\n                {this.props.getArrayPokemonsInfo(data)};\r\n            });\r\n    }\r\n    render() {\r\n       if ((this.props.checkedTypes == 0) && this.props.pokemonsInfo.length) {\r\n           return (\r\n               <React.Fragment>\r\n                   <div className={styles.content}>\r\n                       <div id=\"pokemonsCards\" className={styles.pokemonsCards}>\r\n                           <CreateContent itemsPerPage={this.props.itemsPerPage} pokemons={this.props.pokemonsInfo}/>\r\n                       </div>\r\n                   </div>\r\n               </React.Fragment>\r\n           )\r\n       } else if (this.props.filterPokemons.length ) {\r\n           return (\r\n               <React.Fragment>\r\n                   <div className={styles.content}>\r\n                       <div id=\"pokemonsCards\" className={styles.pokemonsCards}>\r\n                           <CreateContent itemsPerPage={this.props.itemsPerPage} pokemons={this.props.filterPokemons}/>\r\n                       </div>\r\n                   </div>\r\n               </React.Fragment>\r\n           )\r\n       } else if (\r\n         ((this.props.filterPokemons.length == 0) && this.props.checkedTypes.length)\r\n         ||\r\n         ((this.props.findPokemons.length > 0) && (this.props.pokemonsInfo.length == 0))\r\n       ) {\r\n           return (\r\n               <React.Fragment>\r\n                   <div className={styles.nopokemons} >\r\n                       NO POKEMONS\r\n                   </div>\r\n               </React.Fragment>\r\n           )\r\n       } else {\r\n           return (\r\n               <SpinnerThin />\r\n           );\r\n       }\r\n    }\r\n}\r\nexport default connect(\r\n    state => ({\r\n        itemsPerPage: state.itemsPerPage,\r\n        pokemonsTypes: state.pokemonsTypes,\r\n        pokemonsInfo: state.pokemonsInfo.filter(pokemon=> pokemon.name.includes(state.findPokemons)),\r\n        checkedTypes: state.checkedTypes,\r\n        filterPokemons: state.filterPokemons.filter(pokemon=> pokemon.name.includes(state.findPokemons)),\r\n        findPokemons: state.findPokemons\r\n    }),\r\n    dispatch => ({\r\n        getArrayPokemonsInfo(value) {\r\n            dispatch({type: POKEMONS_INFO, payload: value})\r\n        },\r\n    }),\r\n\r\n)(Content);\r\n","import React, { Component } from 'react';\nimport Logo from './components/common/header/logo.js';\nimport FiltersPanel from './containers/filtersPanel';\nimport TagsPanel from \"./containers/tagsPanel\";\nimport Content from \"./containers/content\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n            <Logo />\n            <FiltersPanel />\n            <TagsPanel />\n            <Content/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\r\nimport itemsPerPage from './itemsPerPage.js';\r\nimport pokemonsTypes from './pokemonsTypes.js';\r\nimport pokemonsInfo from './pokemonsInfo.js';\r\nimport checkedTypes from './checkedTypes.js';\r\nimport filterPokemons from './filterPokemonsStore.js';\r\nimport findPokemons from './findPokemons.js';\r\n\r\nexport default combineReducers ({\r\n    itemsPerPage: itemsPerPage,\r\n    pokemonsTypes: pokemonsTypes,\r\n    pokemonsInfo: pokemonsInfo,\r\n    checkedTypes: checkedTypes,\r\n    filterPokemons: filterPokemons,\r\n    findPokemons: findPokemons\r\n})\r\n","import {SET_ITEMS_PER_PAGE} from '../constants/types.js'\r\n\r\nexport default function (state = [], action) {\r\n    switch (action.type){\r\n        case SET_ITEMS_PER_PAGE: {\r\n            return action.payload;\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}","import {GET_ARRAY_POKEMONS_TYPES} from '../constants/actions/actionsTypes.js'\r\n\r\nexport default function (state = [], action) {\r\n    switch (action.type){\r\n        case GET_ARRAY_POKEMONS_TYPES: {\r\n            return action.payload;\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}","import {POKEMONS_INFO} from '../constants/types.js'\r\n\r\nexport default function (state = [], action) {\r\n    switch (action.type){\r\n        case POKEMONS_INFO: {\r\n            return action.payload;\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}","import {ADD_TYPE_TO_LIST} from '../constants/actions/actionsTypes.js';\r\n\r\nexport default function (state = [], action) {\r\n    switch (action.type){\r\n        case ADD_TYPE_TO_LIST: {\r\n            return action.payload\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","import {FILTER_POKEMONS} from '../constants/actions/actionsTypes.js';\r\n\r\nexport default function (state = [], action) {\r\n    switch (action.type){\r\n        case FILTER_POKEMONS: {\r\n            return action.payload;\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","import {FIND_POKEMONS} from '../constants/actions/actionsTypes.js';\r\nconst initialState = '';\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type){\r\n        case FIND_POKEMONS: {\r\n            return action.payload;\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport configureStore from './store'\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducers from '../reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nexport default function configureStore() {\r\n    return createStore(rootReducers, composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    ));\r\n}"],"sourceRoot":""}